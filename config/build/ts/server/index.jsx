import * as React from "react";
import * as express from "express";
import * as fs from "fs";
import createMemoryHistory from "history/createMemoryHistory";
import { renderToString } from "react-dom/server";
import { applyMiddleware, createStore } from "redux";
import { Provider } from "react-redux";
import createSagaMiddleware from "redux-saga";
import Loadable from "react-loadable";
import { getBundles } from "react-loadable/webpack";
import { ConnectedRouter as Router, routerMiddleware } from "react-router-redux";
import { extractCritical } from "emotion-server";
import RootReducer from "@app/reducers";
import App from "@app/index.tsx";
import serialize from "./serialize";
const server = express();
server.use(express.json({ limit: "50mb" }));
server.use('/assets', express.static("build/client", {
    maxAge: 31536000000
}));
const template = fs.readFileSync("build/server/index.html", "utf8");
const stats = JSON.parse(fs.readFileSync("build/server/react-loadable.json", "utf8"));
server.use((req, res, next) => {
    const context = {};
    let modules = [];
    const location = req.path;
    const history = createMemoryHistory({
        initialEntries: [location]
    });
    const sagaMiddleware = createSagaMiddleware();
    const reduxStore = createStore(RootReducer, applyMiddleware(sagaMiddleware, routerMiddleware(history)));
    const LoadableCapture = Loadable.Capture;
    const markup = renderToString(<Provider store={reduxStore}>
            <Router history={history}>
                <App />
            </Router>
        </Provider>);
    const { html, ids, css } = extractCritical(markup);
    let bundles = getBundles(stats, modules);
    bundles = bundles.filter((bundle) => !(/\.map$/.test(bundle.file)));
    const bundlesString = bundles.length > 0 ?
        bundles.map((bundle) => {
            return `<script src="/resources/generated/${bundle.file}" defer></script>`;
        }).join("")
        : "";
    if (!context.url) {
        res.type("html");
        res.charset = "utf-8";
        res.send(template
            .replace("SERVER_RENDERED_HTML", html)
            .replace("SERVER_RENDERED_STATE", serialize(reduxStore.getState()))
            .replace("SERVER_RENDERED_SCRIPTS", bundlesString)
            .replace("SERVER_RENDERED_STYLESHEETS", JSON.stringify(ids))
            .replace("SERVER_RENDERED_STYLES", css));
    }
    next();
});
console.log("Starting server...");
Loadable.preloadAll().then(() => {
    server.listen(8080, () => console.log("Server started on port 8080"));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanN4Iiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc2VydmVyL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLEtBQUssT0FBTyxNQUFNLFNBQVMsQ0FBQztBQUNuQyxPQUFPLEtBQUssRUFBRSxNQUFNLElBQUksQ0FBQztBQUN6QixPQUFPLG1CQUFtQixNQUFNLDZCQUE2QixDQUFDO0FBQzlELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUMsZUFBZSxFQUFFLFdBQVcsRUFBUSxNQUFNLE9BQU8sQ0FBQztBQUMxRCxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQ3JDLE9BQU8sb0JBQXNDLE1BQU0sWUFBWSxDQUFDO0FBQ2hFLE9BQU8sUUFBUSxNQUFNLGdCQUFnQixDQUFDO0FBQ3RDLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNsRCxPQUFPLEVBQUMsZUFBZSxJQUFJLE1BQU0sRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQy9FLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvQyxPQUFPLFdBQVcsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxHQUFHLE1BQU0sZ0JBQWdCLENBQUM7QUFDakMsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBRXBDLE1BQU0sTUFBTSxHQUFHLE9BQU8sRUFBRSxDQUFDO0FBRXpCLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUU7SUFDakQsTUFB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